syntax = "proto3";

option go_package = "github.com/AlexKenbo/dictum_proto/go";


import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "proto/requests.proto";
import "proto/attachment.proto";

//Репо - Attachment
service Storage {
    rpc UploadAttachment(UploadAttachmentRequest) returns (Attachment) {
        option (google.api.http) = {
            post: "/v1/{attachment.resource_name=accruals/*}/attachments"
            body: "attachment"
            additional_bindings {
                post: "/v1/{attachment.resource_name=transfers/*}/attachments"
                body: "attachment"
            }
            additional_bindings {
                post: "/v1/{attachment.resource_name=entities/*}/attachments"
                body: "attachment"
            }
        };
    };

    rpc DeleteAttachment(DeleteRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{resource_name=accruals/*/attachments/*}"
            additional_bindings {
                delete: "/v1/{resource_name=transfers/*/attachments/*}"
            }
            additional_bindings {
                delete: "/v1/{resource_name=entities/*/attachments/*}"
            }
        };
    };

    rpc ListAttachments(ListRequest) returns (ListAttachmentsResponse) {
        option (google.api.http) = {
            delete: "/v1/{parent=accruals/*}/attachments"
            additional_bindings {
                delete: "/v1/{parent=transfers/*}/attachments"
            }
            additional_bindings {
                delete: "/v1/{parent=entities/*}/attachments"
            }
        };
    };
}

message ListAttachmentsResponse {
    string resource_name = 1;
    repeated Attachment attachments = 2;
}

message BatchInsertAttachmentsRequest {
    string resource_name = 1;
    repeated Attachment attachments = 2;
    int32 service_id = 3;
}
