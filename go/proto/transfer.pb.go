// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.24.3
// source: proto/transfer.proto

package _go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId               int32                  `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	ConglomerateId        int32                  `protobuf:"varint,2,opt,name=conglomerate_id,json=conglomerateId,proto3" json:"conglomerate_id,omitempty"`
	IsVirtual             bool                   `protobuf:"varint,4,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
	PaymentPurpose        string                 `protobuf:"bytes,10,opt,name=payment_purpose,json=paymentPurpose,proto3" json:"payment_purpose,omitempty"`
	VerifierId            int32                  `protobuf:"varint,14,opt,name=verifier_id,json=verifierId,proto3" json:"verifier_id,omitempty"`
	ResourceName          string                 `protobuf:"bytes,18,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	Number                string                 `protobuf:"bytes,20,opt,name=number,proto3" json:"number,omitempty"`
	Type                  TransferType           `protobuf:"varint,22,opt,name=type,proto3,enum=TransferType" json:"type,omitempty"`
	Verifier              *User                  `protobuf:"bytes,28,opt,name=verifier,proto3" json:"verifier,omitempty"`
	PayerId               int32                  `protobuf:"varint,31,opt,name=payer_id,json=payerId,proto3" json:"payer_id,omitempty"`
	PayerAccountId        int32                  `protobuf:"varint,32,opt,name=payer_account_id,json=payerAccountId,proto3" json:"payer_account_id,omitempty"`
	PayerTransferKey      string                 `protobuf:"bytes,33,opt,name=payer_transfer_key,json=payerTransferKey,proto3" json:"payer_transfer_key,omitempty"`
	RecipientId           int32                  `protobuf:"varint,34,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	RecipientAccountId    int32                  `protobuf:"varint,35,opt,name=recipient_account_id,json=recipientAccountId,proto3" json:"recipient_account_id,omitempty"`
	RecipientTransferKey  string                 `protobuf:"bytes,36,opt,name=recipient_transfer_key,json=recipientTransferKey,proto3" json:"recipient_transfer_key,omitempty"`
	Amount                float64                `protobuf:"fixed64,37,opt,name=amount,proto3" json:"amount,omitempty"`
	AllocatedAmount       float64                `protobuf:"fixed64,38,opt,name=allocated_amount,json=allocatedAmount,proto3" json:"allocated_amount,omitempty"`
	ParentId              int32                  `protobuf:"varint,40,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Datasource            Source                 `protobuf:"varint,42,opt,name=datasource,proto3,enum=Source" json:"datasource,omitempty"`
	Color                 Color                  `protobuf:"varint,43,opt,name=color,proto3,enum=Color" json:"color,omitempty"`
	Note                  string                 `protobuf:"bytes,44,opt,name=note,proto3" json:"note,omitempty"`
	PayerAccount          *Account               `protobuf:"bytes,47,opt,name=payer_account,json=payerAccount,proto3" json:"payer_account,omitempty"`
	RecipientAccount      *Account               `protobuf:"bytes,48,opt,name=recipient_account,json=recipientAccount,proto3" json:"recipient_account,omitempty"`
	Payer                 *Entity                `protobuf:"bytes,49,opt,name=payer,proto3" json:"payer,omitempty"`
	Recipient             *Entity                `protobuf:"bytes,50,opt,name=recipient,proto3" json:"recipient,omitempty"`
	CreateTime            *timestamppb.Timestamp `protobuf:"bytes,52,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	FullAllocationTime    *timestamppb.Timestamp `protobuf:"bytes,53,opt,name=full_allocation_time,json=fullAllocationTime,proto3" json:"full_allocation_time,omitempty"`
	PaymentTime           *timestamppb.Timestamp `protobuf:"bytes,54,opt,name=payment_time,json=paymentTime,proto3" json:"payment_time,omitempty"`
	VerifyTime            *timestamppb.Timestamp `protobuf:"bytes,55,opt,name=verify_time,json=verifyTime,proto3" json:"verify_time,omitempty"`
	Parent                *Transfer              `protobuf:"bytes,56,opt,name=parent,proto3" json:"parent,omitempty"`
	RecipientCurrencyCode string                 `protobuf:"bytes,57,opt,name=recipient_currency_code,json=recipientCurrencyCode,proto3" json:"recipient_currency_code,omitempty"`
	Attachments           []*Attachment          `protobuf:"bytes,58,rep,name=attachments,proto3" json:"attachments,omitempty"`
	PayerAccountNumber     string  `protobuf:"bytes,59,opt,name=payer_account_number,json=payerAccountNumber,proto3" json:"payer_account_number,omitempty"`
	RecipientAccountNumber string  `protobuf:"bytes,60,opt,name=recipient_account_number,json=recipientAccountNumber,proto3" json:"recipient_account_number,omitempty"`
	PayerAmount            float64 `protobuf:"fixed64,61,opt,name=payer_amount,json=payerAmount,proto3" json:"payer_amount,omitempty"`
	RecipientAmount        float64 `protobuf:"fixed64,62,opt,name=recipient_amount,json=recipientAmount,proto3" json:"recipient_amount,omitempty"`
	PayerCurrencyCode      string  `protobuf:"bytes,63,opt,name=payer_currency_code,json=payerCurrencyCode,proto3" json:"payer_currency_code,omitempty"`
	ExternalUrl            string  `protobuf:"bytes,64,opt,name=external_url,json=externalUrl,proto3" json:"external_url,omitempty"`
	Status                 Status  `protobuf:"varint,65,opt,name=status,proto3,enum=Status" json:"status,omitempty"`
}

func (x *Transfer) Reset() {
	*x = Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transfer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfer) ProtoMessage() {}

func (x *Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transfer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfer.ProtoReflect.Descriptor instead.
func (*Transfer) Descriptor() ([]byte, []int) {
	return file_proto_transfer_proto_rawDescGZIP(), []int{0}
}

func (x *Transfer) GetEventId() int32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *Transfer) GetConglomerateId() int32 {
	if x != nil {
		return x.ConglomerateId
	}
	return 0
}

func (x *Transfer) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

func (x *Transfer) GetPaymentPurpose() string {
	if x != nil {
		return x.PaymentPurpose
	}
	return ""
}

func (x *Transfer) GetVerifierId() int32 {
	if x != nil {
		return x.VerifierId
	}
	return 0
}

func (x *Transfer) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *Transfer) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Transfer) GetType() TransferType {
	if x != nil {
		return x.Type
	}
	return TransferType_TRANSFER_TYPE_UNKNOWN
}

func (x *Transfer) GetVerifier() *User {
	if x != nil {
		return x.Verifier
	}
	return nil
}

func (x *Transfer) GetPayerId() int32 {
	if x != nil {
		return x.PayerId
	}
	return 0
}

func (x *Transfer) GetPayerAccountId() int32 {
	if x != nil {
		return x.PayerAccountId
	}
	return 0
}

func (x *Transfer) GetPayerTransferKey() string {
	if x != nil {
		return x.PayerTransferKey
	}
	return ""
}

func (x *Transfer) GetRecipientId() int32 {
	if x != nil {
		return x.RecipientId
	}
	return 0
}

func (x *Transfer) GetRecipientAccountId() int32 {
	if x != nil {
		return x.RecipientAccountId
	}
	return 0
}

func (x *Transfer) GetRecipientTransferKey() string {
	if x != nil {
		return x.RecipientTransferKey
	}
	return ""
}

func (x *Transfer) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transfer) GetAllocatedAmount() float64 {
	if x != nil {
		return x.AllocatedAmount
	}
	return 0
}

func (x *Transfer) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Transfer) GetDatasource() Source {
	if x != nil {
		return x.Datasource
	}
	return Source_SOURCE_UNKNOWN
}

func (x *Transfer) GetColor() Color {
	if x != nil {
		return x.Color
	}
	return Color_COLOR_UNKNOWN
}

func (x *Transfer) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Transfer) GetPayerAccount() *Account {
	if x != nil {
		return x.PayerAccount
	}
	return nil
}

func (x *Transfer) GetRecipientAccount() *Account {
	if x != nil {
		return x.RecipientAccount
	}
	return nil
}

func (x *Transfer) GetPayer() *Entity {
	if x != nil {
		return x.Payer
	}
	return nil
}

func (x *Transfer) GetRecipient() *Entity {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *Transfer) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Transfer) GetFullAllocationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FullAllocationTime
	}
	return nil
}

func (x *Transfer) GetPaymentTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PaymentTime
	}
	return nil
}

func (x *Transfer) GetVerifyTime() *timestamppb.Timestamp {
	if x != nil {
		return x.VerifyTime
	}
	return nil
}

func (x *Transfer) GetParent() *Transfer {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *Transfer) GetRecipientCurrencyCode() string {
	if x != nil {
		return x.RecipientCurrencyCode
	}
	return ""
}

func (x *Transfer) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Transfer) GetPayerAccountNumber() string {
	if x != nil {
		return x.PayerAccountNumber
	}
	return ""
}

func (x *Transfer) GetRecipientAccountNumber() string {
	if x != nil {
		return x.RecipientAccountNumber
	}
	return ""
}

func (x *Transfer) GetPayerAmount() float64 {
	if x != nil {
		return x.PayerAmount
	}
	return 0
}

func (x *Transfer) GetRecipientAmount() float64 {
	if x != nil {
		return x.RecipientAmount
	}
	return 0
}

func (x *Transfer) GetPayerCurrencyCode() string {
	if x != nil {
		return x.PayerCurrencyCode
	}
	return ""
}

func (x *Transfer) GetExternalUrl() string {
	if x != nil {
		return x.ExternalUrl
	}
	return ""
}

func (x *Transfer) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

var File_proto_transfer_proto protoreflect.FileDescriptor

var file_proto_transfer_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xde, 0x0c, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x67,
	0x6c, 0x6f, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x67, 0x6c, 0x6f, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x75, 0x72, 0x70,
	0x6f, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x08, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x12, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x25, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x26, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x07, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x2b, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x10, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x05,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x09, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x4c, 0x0a, 0x14, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x66, 0x75, 0x6c, 0x6c, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a,
	0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x36, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x3a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x3b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x70, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x18, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x3d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a,
	0x13, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x40, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c,
	0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x41, 0x6c, 0x65, 0x78, 0x4b, 0x65, 0x6e, 0x62, 0x6f, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x75, 0x6d,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_transfer_proto_rawDescOnce sync.Once
	file_proto_transfer_proto_rawDescData = file_proto_transfer_proto_rawDesc
)

func file_proto_transfer_proto_rawDescGZIP() []byte {
	file_proto_transfer_proto_rawDescOnce.Do(func() {
		file_proto_transfer_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_transfer_proto_rawDescData)
	})
	return file_proto_transfer_proto_rawDescData
}

var file_proto_transfer_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_transfer_proto_goTypes = []interface{}{
	(*Transfer)(nil),              // 0: Transfer
	(TransferType)(0),             // 1: TransferType
	(*User)(nil),                  // 2: User
	(Source)(0),                   // 3: Source
	(Color)(0),                    // 4: Color
	(*Account)(nil),               // 5: Account
	(*Entity)(nil),                // 6: Entity
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
	(*Attachment)(nil),            // 8: Attachment
	(Status)(0),                   // 9: Status
}
var file_proto_transfer_proto_depIdxs = []int32{
	1,  // 0: Transfer.type:type_name -> TransferType
	2,  // 1: Transfer.verifier:type_name -> User
	3,  // 2: Transfer.datasource:type_name -> Source
	4,  // 3: Transfer.color:type_name -> Color
	5,  // 4: Transfer.payer_account:type_name -> Account
	5,  // 5: Transfer.recipient_account:type_name -> Account
	6,  // 6: Transfer.payer:type_name -> Entity
	6,  // 7: Transfer.recipient:type_name -> Entity
	7,  // 8: Transfer.create_time:type_name -> google.protobuf.Timestamp
	7,  // 9: Transfer.full_allocation_time:type_name -> google.protobuf.Timestamp
	7,  // 10: Transfer.payment_time:type_name -> google.protobuf.Timestamp
	7,  // 11: Transfer.verify_time:type_name -> google.protobuf.Timestamp
	0,  // 12: Transfer.parent:type_name -> Transfer
	8,  // 13: Transfer.attachments:type_name -> Attachment
	9,  // 14: Transfer.status:type_name -> Status
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_transfer_proto_init() }
func file_proto_transfer_proto_init() {
	if File_proto_transfer_proto != nil {
		return
	}
	file_proto_attachment_proto_init()
	file_proto_transfer_type_proto_init()
	file_proto_account_proto_init()
	file_proto_color_proto_init()
	file_proto_entity_proto_init()
	file_proto_source_proto_init()
	file_proto_status_proto_init()
	file_proto_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_transfer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_transfer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_transfer_proto_goTypes,
		DependencyIndexes: file_proto_transfer_proto_depIdxs,
		MessageInfos:      file_proto_transfer_proto_msgTypes,
	}.Build()
	File_proto_transfer_proto = out.File
	file_proto_transfer_proto_rawDesc = nil
	file_proto_transfer_proto_goTypes = nil
	file_proto_transfer_proto_depIdxs = nil
}
