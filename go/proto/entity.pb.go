// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.24.3
// source: proto/entity.proto

package _go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TODO: нужно сделать для всех сущностей вариаци Create без entity_id, сейчас на клиенте ставим 0
type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId         int32                  `protobuf:"varint,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	ConglomerateId   int32                  `protobuf:"varint,2,opt,name=conglomerate_id,json=conglomerateId,proto3" json:"conglomerate_id,omitempty"`
	Title            string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Type             EntityType             `protobuf:"varint,4,opt,name=type,proto3,enum=EntityType" json:"type,omitempty"`
	IsAgent          bool                   `protobuf:"varint,5,opt,name=is_agent,json=isAgent,proto3" json:"is_agent,omitempty"`
	IsEmployeeOf     bool                   `protobuf:"varint,6,opt,name=is_employee_of,json=isEmployeeOf,proto3" json:"is_employee_of,omitempty"`
	Email            string                 `protobuf:"bytes,9,opt,name=email,proto3" json:"email,omitempty"`
	Phone            string                 `protobuf:"bytes,11,opt,name=phone,proto3" json:"phone,omitempty"`
	Address          string                 `protobuf:"bytes,13,opt,name=address,proto3" json:"address,omitempty"`
	TelegramUserId   int32                  `protobuf:"varint,15,opt,name=telegram_user_id,json=telegramUserId,proto3" json:"telegram_user_id,omitempty"`
	CountryCode      string                 `protobuf:"bytes,17,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	SourceKey        string                 `protobuf:"bytes,19,opt,name=source_key,json=sourceKey,proto3" json:"source_key,omitempty"`
	TelegramUser     *TelegramUser          `protobuf:"bytes,21,opt,name=telegram_user,json=telegramUser,proto3" json:"telegram_user,omitempty"`
	Country          *Country               `protobuf:"bytes,23,opt,name=country,proto3" json:"country,omitempty"`
	Agent            *Agent                 `protobuf:"bytes,25,opt,name=agent,proto3" json:"agent,omitempty"`
	Sources          []*EntitySource        `protobuf:"bytes,27,rep,name=sources,proto3" json:"sources,omitempty"`
	ContactCreatorId int32                  `protobuf:"varint,28,opt,name=contact_creator_id,json=contactCreatorId,proto3" json:"contact_creator_id,omitempty"`
	AliasCode        string                 `protobuf:"bytes,29,opt,name=alias_code,json=aliasCode,proto3" json:"alias_code,omitempty"`
	CreateTime       *timestamppb.Timestamp `protobuf:"bytes,30,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_entity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_entity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_proto_entity_proto_rawDescGZIP(), []int{0}
}

func (x *Entity) GetEntityId() int32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *Entity) GetConglomerateId() int32 {
	if x != nil {
		return x.ConglomerateId
	}
	return 0
}

func (x *Entity) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Entity) GetType() EntityType {
	if x != nil {
		return x.Type
	}
	return EntityType_ENTITY_TYPE_UNKNOWN
}

func (x *Entity) GetIsAgent() bool {
	if x != nil {
		return x.IsAgent
	}
	return false
}

func (x *Entity) GetIsEmployeeOf() bool {
	if x != nil {
		return x.IsEmployeeOf
	}
	return false
}

func (x *Entity) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Entity) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Entity) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Entity) GetTelegramUserId() int32 {
	if x != nil {
		return x.TelegramUserId
	}
	return 0
}

func (x *Entity) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *Entity) GetSourceKey() string {
	if x != nil {
		return x.SourceKey
	}
	return ""
}

func (x *Entity) GetTelegramUser() *TelegramUser {
	if x != nil {
		return x.TelegramUser
	}
	return nil
}

func (x *Entity) GetCountry() *Country {
	if x != nil {
		return x.Country
	}
	return nil
}

func (x *Entity) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *Entity) GetSources() []*EntitySource {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *Entity) GetContactCreatorId() int32 {
	if x != nil {
		return x.ContactCreatorId
	}
	return 0
}

func (x *Entity) GetAliasCode() string {
	if x != nil {
		return x.AliasCode
	}
	return ""
}

func (x *Entity) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

var File_proto_entity_proto protoreflect.FileDescriptor

var file_proto_entity_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x05, 0x0a,
	0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x67, 0x6c, 0x6f, 0x6d, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x67, 0x6c, 0x6f, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0b, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x6f,
	0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x45, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x4f, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x74,
	0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x0d, 0x74, 0x65, 0x6c, 0x65, 0x67,
	0x72, 0x61, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0c, 0x74,
	0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x1c, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a,
	0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41,
	0x6c, 0x65, 0x78, 0x4b, 0x65, 0x6e, 0x62, 0x6f, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x75, 0x6d, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_entity_proto_rawDescOnce sync.Once
	file_proto_entity_proto_rawDescData = file_proto_entity_proto_rawDesc
)

func file_proto_entity_proto_rawDescGZIP() []byte {
	file_proto_entity_proto_rawDescOnce.Do(func() {
		file_proto_entity_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_entity_proto_rawDescData)
	})
	return file_proto_entity_proto_rawDescData
}

var file_proto_entity_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_entity_proto_goTypes = []interface{}{
	(*Entity)(nil),                // 0: Entity
	(EntityType)(0),               // 1: EntityType
	(*TelegramUser)(nil),          // 2: TelegramUser
	(*Country)(nil),               // 3: Country
	(*Agent)(nil),                 // 4: Agent
	(*EntitySource)(nil),          // 5: EntitySource
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_proto_entity_proto_depIdxs = []int32{
	1, // 0: Entity.type:type_name -> EntityType
	2, // 1: Entity.telegram_user:type_name -> TelegramUser
	3, // 2: Entity.country:type_name -> Country
	4, // 3: Entity.agent:type_name -> Agent
	5, // 4: Entity.sources:type_name -> EntitySource
	6, // 5: Entity.create_time:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_entity_proto_init() }
func file_proto_entity_proto_init() {
	if File_proto_entity_proto != nil {
		return
	}
	file_proto_entity_type_proto_init()
	file_proto_telegram_user_proto_init()
	file_proto_country_proto_init()
	file_proto_agent_proto_init()
	file_proto_entity_source_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_entity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_entity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_entity_proto_goTypes,
		DependencyIndexes: file_proto_entity_proto_depIdxs,
		MessageInfos:      file_proto_entity_proto_msgTypes,
	}.Build()
	File_proto_entity_proto = out.File
	file_proto_entity_proto_rawDesc = nil
	file_proto_entity_proto_goTypes = nil
	file_proto_entity_proto_depIdxs = nil
}
